@page "/Citationresolution/{citation_number}"
@inject IDialogService DialogService
@layout UnAuthLayout
@inherits CitationResolutionBase

<br />
<MudSimpleTable Hover="true" Dense="true" FixedHeader="true">
    <thead>
        <tr>
            @foreach (var h in headings)
            {
                <th>@h</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var data in CitizenVehicleCitation)
        {
            <tr>
                <td>@data.citation_number</td>
                <td>@(((CitationTypes)data.citation_type_id).ToDescriptionString())</td>
                <td>@data.date_recieved</td>
                <td>@data.date_due</td>
                <td>@data.training_eligable</td>
                <td>@data.fine</td>
                @if (data.fine > 0)
                {
                    <td><MudButton @onclick="@((e) => OpenPayDialog(data))" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary">Pay</MudButton></td>
                }
                @if (data.training_eligable == true && !data.is_registered)
                {
                    <td>
                        <MudButton @onclick="((e) => OpenCourseEnrollmentDialog(data))" Variant="Variant.Filled"
                                   Size="Size.Small" Color="Color.Primary">Enroll in Course</MudButton>
                    </td>
                }
                @if (data.training_eligable == true && data.is_registered)
                {
                    <td>
                        <MudButton @onclick="((e) => OpenCourseEnrollmentDialog(data))" Variant="Variant.Filled"
                                   Size="Size.Small" Color="Color.Primary" Disabled="@(data.is_registered)">Already Enrolled in Course</MudButton>
                    </td>
                }

            </tr>
        }
    </tbody>

</MudSimpleTable>

@using TCRS.Shared.Objects.Citations;
@code
{ [Inject]
    private NavigationManager NavigationManager { get; set; }

    private async void OpenPayDialog(CitizenVehicleCitation data)
    {
        var parameters = new DialogParameters { ["data"] = data };
        var dialog = DialogService.Show<PayDialog>("Fine Payment", parameters);
        var result = await dialog.Result;

        // successful payment
        if (!result.Cancelled)
        {
            // Go back to the home page
            StateHasChanged();
            NavigationManager.NavigateTo("/");
        }

    }

    private async void OpenCourseEnrollmentDialog(CitizenVehicleCitation data)
    {
        var parameters = new DialogParameters { ["data"] = data };
        var dialog = DialogService.Show<CourseEnrollmentDialog>("Course Enrollment", parameters);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            // successful
            StateHasChanged();
            NavigationManager.NavigateTo("/");
        }

    } }
