@inject IDialogService DialogService

<MudDialog>
    <DialogContent>
        <MudSimpleTable Hover="true" Dense="true" FixedHeader="true" Style="height:300px">
            <thead>
                <tr>
                    @foreach (var h in headings)
                    {
                        <th>@h</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var data in CourseData)
                {
                    <tr>
                        @foreach (var prop in ObjectPrinter.PropertiesOfType(data))
                        {
                            //if (prop.Key == "course_id" || prop.Key == "scheduled" || prop.Key == "address")
                            //{
                            <td>@prop.Value</td>
                            //}

                        }
                        <MudButton @onclick="@((e) => BookDialogPress(data))" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary" Class="ma-2">Book</MudButton>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Secondary">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@using TCRS.Shared.Objects.Citations;
@using TCRS.Shared.Contracts.CourseManagement;
@using TCRS.Shared.Objects.CourseEnrollment;
@code {
    protected List<CourseEnrollmentData> CourseData { get; set; } = new List<CourseEnrollmentData>();
    protected string[] headings = { "Course ID", "Date", "Location" };
    CourseEnrollmentBookingData bookingData = new CourseEnrollmentBookingData();

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public CitizenVehicleCitation data { get; set; }

    [Inject]
    private ICourseManager CourseManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        var courseInformation = await CourseManager.GetCourses(data.citation_type_id + "");

        this.CourseData = courseInformation;
    }

    protected async Task BookDialogPress(CourseEnrollmentData selectedCourse)
    {
        // register the user in the course
        bookingData = new CourseEnrollmentBookingData {
            course_id = selectedCourse.course_id,
            citation_number = data.citation_number,
        };

        await CourseManager.BookCourse(bookingData);

        MudDialog.Close(DialogResult.Ok(true));

    }

    void Cancel() => MudDialog.Cancel();


}