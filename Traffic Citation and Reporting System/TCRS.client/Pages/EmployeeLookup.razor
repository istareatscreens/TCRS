@page "/Employeelookup"
@*@attribute [Authorize(Roles = Roles.Manager)]*@
@inherits EmployeeLookupBase

@using System.ComponentModel.DataAnnotations

<MudText Typo="Typo.h3">Employee Lookup</MudText>

<div class="citation-body">
    <div style="max-width: 400px;">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name (person_id)" Variant="Variant.Outlined"
                                  @bind-Value="model.person_id" For="@(() => model.person_id)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Search</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </div>

    <MudPaper Class="pa-1 ma-2" Elevation="3">
        <div style="max-width: 400px;">
            <MudTextField @bind-Value="GetEmployeeName" Label="Employee information for:" ReadOnly="true" Variant="Variant.Outlined" />

            <MudText Typo="Typo.h6">Employee Information</MudText>

            <MudTextField @bind-Value="GetEmployeeName" Label="Employee Name:" ReadOnly="true" Variant="Variant.Filled" />
            <MudTextField @bind-Value="GetEmployeeEmail" Label="Employee Email:" ReadOnly="true" Variant="Variant.Filled" />
            <MudTextField @bind-Value="GetEmployeeActive" Label="Employee Active:" ReadOnly="true" Variant="Variant.Filled" />
            <MudTextField @bind-Value="GetEmployeeDepartment" Label="Employee Department:" ReadOnly="true" Variant="Variant.Filled" />
            <MudTextField @bind-Value="GetEmployeeRole" Label="Employee Role:" ReadOnly="true" Variant="Variant.Filled" />

        </div>

    </MudPaper>

    @code {
        RegisterAccountForm model = new RegisterAccountForm();
        bool success;

        public class RegisterAccountForm
        {
            [Required]
            [StringLength(8, ErrorMessage = "Invalid person_id")]
            public string person_id { get; set; }

        }

        private void OnValidSubmit(EditContext context)
        {
            success = true;
            StateHasChanged();
        }

        public string Disabled { get; set; }

        public string GetEmployeeName { get; set; } = "Employee Name Here";
        public string GetEmployeeEmail { get; set; } = "Employee Email Here";
        public string GetEmployeeActive { get; set; } = "Employee Name Here";
        public string GetEmployeeDepartment { get; set; } = "Employee Department Here";
        public string GetEmployeeRole { get; set; } = "Employee Role Here";

    }

</div>